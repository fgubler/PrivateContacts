/*
 * Private Contacts
 * Copyright (c) 2022.
 * Florian Gubler
 */

plugins {
    id "com.android.application"
    id "kotlin-android"
    id "de.mannodermaus.android-junit5"
    id "org.jlleitschuh.gradle.ktlint"
    id 'com.google.devtools.ksp' version "${kspVersion}"
    id 'androidx.room'
    id 'org.jetbrains.kotlin.plugin.compose'

    id "com.google.gms.google-services"
    id "com.google.firebase.crashlytics"
}

ktlint {
    disabledRules = [
            "trailing-comma-on-declaration-site",
            "trailing-comma-on-call-site",
            "multiline-if-else",
            "annotation"
    ]
}

android {
    compileSdk 36

    defaultConfig {
        applicationId "ch.abwesend.privatecontacts"
        minSdk 24
        targetSdk 36
        versionCode 89
        versionName "5.1.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables {
            useSupportLibrary true
        }

        room {
            schemaDirectory "$projectDir/room_schemas"
        }
    }

    androidResources {
        generateLocaleConfig true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }

    flavorDimensions = ["appStore"]
    productFlavors {
        googlePlay {
            dimension "appStore"
            isDefault true
        }
        fdroid { dimension "appStore" }
    }

    compileOptions {

        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true
    }
    kotlinOptions {
        jvmTarget = "17"
//        useIR = true // gradle build fails with this option set to true...
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion composeCompilerVersion
    }
    packagingOptions {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1,LICENSE.md,LICENSE-notice.md}"
        }
    }
    namespace 'ch.abwesend.privatecontacts'
}

dependencies {
    implementation project(':google_address_lib')

    // Kotlin Core
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutinesVersion}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutinesVersion}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"

    // Android Core
    implementation "androidx.core:core-ktx:1.16.0"
    implementation "androidx.appcompat:appcompat:1.7.1"
    implementation "com.google.android.material:material:1.12.0"

    // Android Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:${androidLifecycleVersion}"
    implementation "androidx.lifecycle:lifecycle-common-java8:${androidLifecycleVersion}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${androidLifecycleVersion}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${androidLifecycleVersion}"
    implementation "androidx.lifecycle:lifecycle-service:${androidLifecycleVersion}"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:${androidLifecycleVersion}"

    // Android Jetpack Compose
    implementation "androidx.compose.ui:ui:${composeVersion}"
    implementation "androidx.compose.material:material:${composeMaterialVersion}"
    implementation "androidx.compose.material:material-icons-extended:${composeMaterialVersion}"
    implementation "androidx.compose.ui:ui-tooling-preview:${composeVersion}"
    implementation "androidx.compose.runtime:runtime:${composeVersion}"
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    debugImplementation "androidx.compose.ui:ui-tooling:${composeVersion}"
    implementation "androidx.activity:activity-compose:1.10.1"
    implementation "androidx.navigation:navigation-compose:2.9.0"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.1.1"

    // Firebase
    googlePlayImplementation platform("com.google.firebase:firebase-bom:33.13.0")
    googlePlayImplementation 'com.google.firebase:firebase-crashlytics' // does not need a version because of firebase-bom
    googlePlayImplementation("com.google.firebase:firebase-analytics")

    // Android Room
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
    annotationProcessor "androidx.room:room-compiler:$roomVersion"
    ksp "androidx.room:room-compiler:$roomVersion"

    // Android Review
    implementation "com.google.android.play:review:${androidReviewVersion}"
    implementation "com.google.android.play:review-ktx:${androidReviewVersion}"

    // Others
    implementation "androidx.datastore:datastore-preferences:1.1.1" // 1.1.6 produces strange errors in crashlytics

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.5'

    implementation "androidx.biometric:biometric:1.1.0"

    implementation "io.insert-koin:koin-core:$koinVersion"
    implementation "io.insert-koin:koin-android:${koinVersion}"
    implementation "io.insert-koin:koin-androidx-compose:$koinVersion"

    implementation "com.alexstyl:contactstore:${contactStoreVersion}"
    implementation "com.alexstyl:contactstore-coroutines:${contactStoreVersion}"

    implementation 'com.googlecode.ez-vcard:ez-vcard:0.12.0' // 0.12.1 produces strange errors

    // ===== Testing =====
    // Unit Tests
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.assertj:assertj-core:3.21.0"

    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${coroutinesVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}"

    testImplementation "de.mannodermaus.junit5:android-test-core:${junit5AndroidVersion}"

    testImplementation "io.insert-koin:koin-test-junit5:${koinVersion}"
    testImplementation "androidx.room:room-testing:$roomVersion"
    testImplementation "com.tngtech.archunit:archunit-junit5:${archUnitVersion}"

    testImplementation "io.mockk:mockk:${mockkVersion}"
    testImplementation "io.mockk:mockk-agent-jvm:${mockkVersion}"

    testImplementation "com.alexstyl:contactstore-test:${contactStoreVersion}"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"

    // Instrumented Tests
    androidTestImplementation "org.assertj:assertj-core:3.21.0"
    androidTestImplementation "androidx.test.ext:junit:1.2.1"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.6.1"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:${composeVersion}"

    androidTestImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    androidTestImplementation "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
    androidTestImplementation "org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}"

    androidTestImplementation "io.insert-koin:koin-test-junit5:${koinVersion}"

    androidTestImplementation "io.mockk:mockk-android:${mockkVersion}"
}
