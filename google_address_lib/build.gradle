/*
 * Copyright (C) 2015 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.9.2'
    }
}

plugins {
    id "java"
    id "org.checkerframework" version "0.6.19"
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

sourceSets {
    /* It's simpler if the test resources are next to the java sources. */
    test {
        resources {
            srcDir 'src/test/java'
        }
    }
}

test {
    /* Listen to events in the test execution lifecycle. */
    beforeTest { descriptor -> logger.lifecycle("Running test: " + descriptor) }

    /* Show standard out and standard error of the test JVM(s) on the console. */
    // testLogging.showStandardStreams = true

    /* Listen to standard out and standard error of the test JVM(s). */
    // onOutput { descriptor, event ->
    //   logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
    // }
}

// TODO try to replace some of the dependencies with kotlin coroutines?
dependencies {
    implementation 'org.checkerframework:checker-qual:3.33.0'
    implementation 'com.google.guava:guava:31.0.1-android'
    implementation "androidx.concurrent:concurrent-futures:1.2.0"

    /* Note that gradle will warn about this not being the same version as *
     * the Android JSON library (but will not compile if it's removed).    */
    implementation 'org.json:json:20220320'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.google.truth:truth:1.0'
    testImplementation 'org.mockito:mockito-core:1.9.5'
}

